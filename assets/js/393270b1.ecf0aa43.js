"use strict";(self.webpackChunkpollerdox=self.webpackChunkpollerdox||[]).push([[634],{6076:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"dependencies/prometheus","title":"Prometheus","description":"This page explains how to configure Prometheus and Unpoller.","source":"@site/docs/dependencies/prometheus.md","sourceDirName":"dependencies","slug":"/dependencies/prometheus","permalink":"/docs/dependencies/prometheus","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"prometheus","title":"Prometheus"},"sidebar":"someSidebar","previous":{"title":"Grafana","permalink":"/docs/dependencies/grafana"},"next":{"title":"Loki","permalink":"/docs/dependencies/loki"}}');var l=o(4848),s=o(8453);const i={id:"prometheus",title:"Prometheus"},t=void 0,a={},c=[{value:"Single Controller",id:"single-controller",level:2},{value:"Multiple Controllers",id:"multiple-controllers",level:2},{value:"First Approach",id:"first-approach",level:3},{value:"Second Approach",id:"second-approach",level:3},{value:"Prometheus Configuration for URLs",id:"prometheus-configuration-for-urls",level:4},{value:"Final Approach, NOT Recommended",id:"final-approach-not-recommended",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["This page explains how to configure Prometheus and Unpoller.\nFor help installing Prometheus you'll have to look elsewhere; that's not in this document.\nIf you need help getting started,\n",(0,l.jsx)(n.a,{href:"../dependencies/influxdb",children:"InfluxDB"})," is recommended."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"Prometheus support was added in the 1.6 release, but was not very well documented.\nRelease 2.0 brings with it a re-write of the prometheus integration.\nMany changes were made to how one may configure a controller. This page only applies to version 2.0.1+."})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"single-controller",children:"Single Controller"}),"\n",(0,l.jsxs)(n.p,{children:["Configure a single controller in ",(0,l.jsx)(n.code,{children:"up.conf"})," (or using environment variables).\nSee ",(0,l.jsx)(n.a,{href:"../install/configuration",children:"Application Configuration"})," and the\n",(0,l.jsx)(n.a,{href:"https://github.com/unpoller/unpoller/blob/master/examples/up.conf.example",children:"example config file"}),"\nfor help with that."]}),"\n",(0,l.jsx)(n.p,{children:"Then you simply point prometheus at unpoller using a config like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"scrape_configs:\n  - job_name: 'unifipoller'\n    scrape_interval: 30s\n    static_configs:\n    - targets: ['localhost:9130']\n"})}),"\n",(0,l.jsxs)(n.p,{children:["If you have other scrape configs, leave them there. Just add a new one for ",(0,l.jsx)(n.code,{children:"unifipoller"}),".\nReplace localhost with the IP of the host running Poller.\nThat's it! Restart Prometheus and it should begin to scrape data from your controller through Poller."]}),"\n",(0,l.jsx)(n.admonition,{type:"important",children:(0,l.jsx)(n.p,{children:"UniFi Poller needs to be accessible on TCP port 9130.\nThis may require exposing ports or modifying firewalls."})}),"\n",(0,l.jsx)(n.h2,{id:"multiple-controllers",children:"Multiple Controllers"}),"\n",(0,l.jsx)(n.p,{children:"You can either configure the controllers in unpoller or poll them unconfigured.\nWhen polling unconfigured, you must enable dynamic.\nYou can scrape multiple controllers in several ways. Here is a list of options:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Set all controller user/passwords the same and pass in controller URLs from Prometheus.\nTo do this, you set the username and password as the default in the unifi config."}),"\n",(0,l.jsx)(n.li,{children:"Configure each controller in unpoller and pass in urls from Prometheus.\nThis allows them to have different usernames and passwords."}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"NOT Recommended:"})," Configure each controller in unpoller and configure\nprometheus as shown above in the Single Controller section. This is useful when you\nwant to poll all the controllers at the same time from a single prometheus instance."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"first-approach",children:"First Approach"}),"\n",(0,l.jsx)(n.p,{children:"This describes approach 1 above."}),"\n",(0,l.jsx)(n.p,{children:"Using this approach all you need to configure for controllers in unpoller is the name\nand password. Example below. Any settings you provide to [unifi.defaults] will be used\nfor all controllers passed in from Prometheus. All other settings are optional."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[unifi]\n  # This must be enabled to do dynamic polls against unconfigured urls.\n  dynamic = true\n[unifi.defaults]\n  user       = "unifipoller"\n  pass       = "unifipoller"\n  sites      = ["all"]\n  save_ids   = false\n  save_dpi   = false\n  save_sites = true\n  verify_ssl = false\n'})}),"\n",(0,l.jsx)(n.p,{children:"Or with env variables:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:'UP_UNIFI_DYNAMIC=true\nUP_UNIFI_DEFAULT_USER="unifipoller"\nUP_UNIFI_DEFAULT_PASS="unifipoller"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"second-approach",children:"Second Approach"}),"\n",(0,l.jsx)(n.p,{children:"This describes approach 2 above."}),"\n",(0,l.jsx)(n.p,{children:"Configure each controller in up.conf or using environment variables.\nWhen Prometheus scrapes from unpoller the poller will map the URL directly to the one configured\nin up.conf (or using env vars). Just make sure the url you put into the prometheus configuration\nmatches the url put into the poller configuration."}),"\n",(0,l.jsx)(n.p,{children:"Example polling two controllers:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[unifi]\n  # Not needed since not dynamic.\n  dynamic = false\n[[unifi.controller]]\n  url = "http://unifi.controller:8443"\n  user = "unifipoller1"\n  pass = "unifipoller1"\n[[unifi.controller]]\n  url = "http://another.controller:8443"\n  user = "unifipoller2"\n  pass = "unifipoller2"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Or with env variables:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'UP_UNIFI_DYNAMIC=false\nUP_UNIFI_CONTROLLER_0_URL="http://unifi.controller:8443"\nUP_UNIFI_CONTROLLER_0_USER="unifipoller"\nUP_UNIFI_CONTROLLER_0_PASS="unifipoller"\nUP_UNIFI_CONTROLLER_1_URL="http://another.controller:8443"\nUP_UNIFI_CONTROLLER_1_USER="unifipoller"\nUP_UNIFI_CONTROLLER_1_PASS="unifipoller"\n'})}),"\n",(0,l.jsx)(n.h4,{id:"prometheus-configuration-for-urls",children:"Prometheus Configuration for URLs"}),"\n",(0,l.jsx)(n.p,{children:"This applies to both approaches above. Configure prometheus like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"scrape_configs:\n  - job_name: 'unifipoller'\n    scrape_interval: 30s\n    static_configs:\n      - targets:\n        - https://unifi.controller:8443\n        - https://another.controller:8443\n    metrics_path: /scrape\n    relabel_configs:\n     - source_labels: [__address__]\n       target_label: __param_target\n     - source_labels: [__param_target]\n       target_label: instance\n     - target_label: __address__\n       replacement: localhost:9130\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Replace ",(0,l.jsx)(n.code,{children:"localhost"})," with the IP of your unpoller host, and replace ",(0,l.jsx)(n.code,{children:"unifi.controller"}),"\nand another.controller with the IPs of your controllers."]}),"\n",(0,l.jsx)(n.h3,{id:"final-approach-not-recommended",children:"Final Approach, NOT Recommended"}),"\n",(0,l.jsxs)(n.p,{children:["Just configure your controllers in ",(0,l.jsx)(n.code,{children:"up.conf"})," or using env variables as explained in the\n",(0,l.jsx)(n.a,{href:"../install/configuration",children:"Application Configuration"})," page. Then setup Prometheus like this:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"scrape_configs:\n  - job_name: 'unifipoller'\n    scrape_interval: 30s\n    static_configs:\n    - targets: ['localhost:9130']\n"})}),"\n",(0,l.jsxs)(n.p,{children:["The standard ",(0,l.jsx)(n.code,{children:"/metrics"})," path that the above snippet uses returns metrics for all configured controllers."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>t});var r=o(6540);const l={},s=r.createContext(l);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);