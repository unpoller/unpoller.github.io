"use strict";(self.webpackChunkpollerdox=self.webpackChunkpollerdox||[]).push([[969],{325:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=t(8168),a=(t(6540),t(5680));const l={id:"freebsd",title:"FreeBSD"},o=void 0,i={unversionedId:"install/freebsd",id:"install/freebsd",title:"FreeBSD",description:"This page assumes that you have decided to install UniFi Poller on to an existing FreeBSD operating system.",source:"@site/docs/install/freebsd.md",sourceDirName:"install",slug:"/install/freebsd",permalink:"/docs/install/freebsd",draft:!1,tags:[],version:"current",frontMatter:{id:"freebsd",title:"FreeBSD"},sidebar:"someSidebar",previous:{title:"Kubernetes",permalink:"/docs/install/kubernetes"},next:{title:"MacOS",permalink:"/docs/install/macos"}},s={},p=[{value:"First",id:"first",level:2},{value:"Installation",id:"installation",level:2},{value:"Compile",id:"compile",level:2},{value:"Maintenance",id:"maintenance",level:2},{value:"Next Steps",id:"next-steps",level:2}],u={toc:p},c="wrapper";function f(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This page assumes that you have decided to install UniFi Poller on to an existing FreeBSD operating system."),(0,a.yg)("h2",{id:"first"},"First"),(0,a.yg)("p",null,"Make sure you have set up a user on your controller for UniFi Poller to poll. You must have\na working (and supported) version of ",(0,a.yg)("a",{parentName:"p",href:"../dependencies/grafana"},"Grafana")," and at\nleast one of ",(0,a.yg)("a",{parentName:"p",href:"../dependencies/influxDB"},"InfluxDB")," or ",(0,a.yg)("a",{parentName:"p",href:"../dependencies/prometheus"},"Prometheus"),".\nIf you don't have them, follow these instructions for installing\n",(0,a.yg)("a",{parentName:"p",href:"../dependencies/influxdb"},"InfluxDB")," and ",(0,a.yg)("a",{parentName:"p",href:"../dependencies/grafana"},"Grafana"),"."),(0,a.yg)("hr",null),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("p",null,"Install compiled binary from ports run:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"pkg install net/unpoller\n")),(0,a.yg)("h2",{id:"compile"},"Compile"),(0,a.yg)("p",null,"To build and install from ports run:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"cd /usr/ports/net-mgmt/unpoller\nmake install clean\n")),(0,a.yg)("h2",{id:"maintenance"},"Maintenance"),(0,a.yg)("p",null,"See ",(0,a.yg)("a",{parentName:"p",href:"../install/configuration"},"Application Configuration")," and the\n",(0,a.yg)("a",{parentName:"p",href:"https://github.com/unpoller/unpoller/blob/master/examples/up.conf.example"},"example config"),"\nfile for additional post-install configuration information."),(0,a.yg)("admonition",{type:"important"},(0,a.yg)("p",{parentName:"admonition"},"When configuring make sure that you do ",(0,a.yg)("strong",{parentName:"p"},"not")," include ",(0,a.yg)("inlineCode",{parentName:"p"},":8443")," on the url of the controller\nif you are using ",(0,a.yg)("inlineCode",{parentName:"p"},"unifios"),". Those are: UDM Pro, UDM, UXG, or CloudKey with recent firmware.")),(0,a.yg)("p",null,"Use these commands to maintain the service:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'# View manual.\nman unpoller\n\n# Edit config file.\n# A defualt configuration file is placed in /usr/local/etc/unpoller/up.conf which is not overwritten on upgrades\n# A sample configuration is placed in /usr/local/etc/unpoller/up.conf.sample\nvi /usr/local/etc/unpoller/up.conf\n\n# enable the service. Or edit /etc/rc.conf\nsysrc unpoller_enable="YES"\n\n# Start, Restart, Stop service.\nservice unpoller start\nservice unpoller restart\nservice unpoller stop\n# Check service status, useful for scripts.\nservice unpoller status\n\n# Logs should wind up in this file, but your syslog may differ.\ngrep unpoller /var/log/messages\n')),(0,a.yg)("h2",{id:"next-steps"},"Next Steps"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Don't forget the ",(0,a.yg)("a",{parentName:"li",href:"../dependencies/grafana#plugins"},"Grafana Plugins"),"."),(0,a.yg)("li",{parentName:"ol"},"Finish ",(0,a.yg)("a",{parentName:"li",href:"../install/grafana"},"Setting-up Grafana"),".")))}f.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=a,g=c["".concat(s,".").concat(d)]||c[d]||f[d]||l;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);