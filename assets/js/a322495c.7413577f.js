"use strict";(self.webpackChunkpollerdox=self.webpackChunkpollerdox||[]).push([[427],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return t?a.createElement(f,l(l({ref:n},u),{},{components:t})):a.createElement(f,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7077:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(3117),r=(t(7294),t(3905));const o={id:"dockercompose",title:"Docker Compose"},l=void 0,i={unversionedId:"install/dockercompose",id:"install/dockercompose",title:"Docker Compose",description:"This page assumes that you have decided to start Unpoller using docker-compose.",source:"@site/docs/install/dockercompose.md",sourceDirName:"install",slug:"/install/dockercompose",permalink:"/docs/install/dockercompose",draft:!1,tags:[],version:"current",frontMatter:{id:"dockercompose",title:"Docker Compose"},sidebar:"someSidebar",previous:{title:"Unifi Controller Login",permalink:"/docs/install/controllerlogin"},next:{title:"Docker",permalink:"/docs/install/docker"}},s={},p=[{value:"First",id:"first",level:2},{value:"Installation",id:"installation",level:2},{value:"Using Environment Variables",id:"using-environment-variables",level:3},{value:"Prometheus Example",id:"prometheus-example",level:4},{value:"Using Configuration File",id:"using-configuration-file",level:3},{value:"InfluxDB Example",id:"influxdb-example",level:4},{value:"Starting",id:"starting",level:2},{value:"Next Steps",id:"next-steps",level:2}],u={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page assumes that you have decided to start Unpoller using ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose"),".\nThe setup detailed below will install containers for Unpoller, Grafana and InfluxDB"),(0,r.kt)("h2",{id:"first"},"First"),(0,r.kt)("p",null,"Make sure you have ",(0,r.kt)("a",{parentName:"p",href:"controllerlogin"},"set up a user")," on your controller for Unpoller. "),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Unpoller's Docker container can be configured in two ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using environment variables."),(0,r.kt)("li",{parentName:"ol"},"Using a configuration file.")),(0,r.kt)("p",null,"Which to use is a matter of personal choice. The environmental path has the advantage that\nall settings are in one place (albeit a hidden file, and one where all information is available\nto all containers). The config file method has the advantage that Unpoller specific\nsettings can be saved in the same shared Docker folder as the rest of the app's data."),(0,r.kt)("p",null,"There is a detailed description of the configuration parameters on the\n",(0,r.kt)("a",{parentName:"p",href:"../install/configuration"},"Application Configuration")," page."),(0,r.kt)("p",null,"Both of the alternatives described here will pull containers not just for Unpoller,\nbut also for InfluxDB and Grafana. If you wish to use existing instances then amend the files as necessary."),(0,r.kt)("h3",{id:"using-environment-variables"},"Using Environment Variables"),(0,r.kt)("p",null,"The easiest way to pass environment variables via ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," is to have a\nfile called ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," in the same folder as the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," yaml file"),(0,r.kt)("admonition",{title:"Hidden Files",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Files beginning with a period ",(0,r.kt)("inlineCode",{parentName:"p"},".")," are generally hidden. You may need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"ls -a")," to find the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy the example ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/unpoller/unpoller/blob/master/init/docker/docker-compose.env.example"},"environment file")),(0,r.kt)("li",{parentName:"ul"},"Edit it as necessary (in particular ensure that ",(0,r.kt)("inlineCode",{parentName:"li"},"UNIFI_USER")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"UNIFI_PASS")," are set)"),(0,r.kt)("li",{parentName:"ul"},"Save it as ",(0,r.kt)("inlineCode",{parentName:"li"},".env")," in the same folder as your ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," (if you have one; if not see below)")),(0,r.kt)("p",null,"Download the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/unpoller/unpoller/blob/master/init/docker/docker-compose.yml"},"example"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and add it to your existing one (if you have one; if not just make sure it is\nsaved in the same folder as the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file)"),(0,r.kt)("h4",{id:"prometheus-example"},"Prometheus Example"),(0,r.kt)("p",null,"This example is advanced, for demonstration only, and not recommend for newbies."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Advanced Prometheus Example"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"The following example illustrates launching Grafana, Prometheus and Unpoller with docker compose.\nThis does not utilize a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file nor a configuration file and instead puts all the env variables\ndirectly into the docker-compose file.\nThis still requires a ",(0,r.kt)("a",{parentName:"p",href:"../dependencies/prometheus"},"Prometheus configuration")," to scrape Poller."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This is a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/unpoller/unpoller/issues/309#issuecomment-796870916"},"community provided"),"\nexample.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3\'\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    restart: unless-stopped\n    ports:\n      - \'9090:9090\'\n    volumes:\n      - /root/prometheus:/etc/prometheus\n      - prometheus-data:/prometheus\n  grafana:\n    image: grafana/grafana:latest\n    restart: unless-stopped\n    ports:\n      - \'3000:3000\'\n    volumes:\n      - grafana-storage:/var/lib/grafana\n    depends_on:\n      - prometheus\n    environment:\n      - GF_SECURITY_ADMIN_USER=admin\n      - GF_SECURITY_ADMIN_PASSWORD=admin123\n      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel\n  unpoller:\n    image: ghcr.io/unpoller/unpoller:latest\n    restart: unless-stopped\n    ports:\n      - \'9130:9130\'\n    container_name: unpoller\n    environment:\n      UP_INFLUXDB_DISABLE="true"\n      UP_POLLER_DEBUG="false"\n      UP_UNIFI_DYNAMIC="false"\n      UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130\n      UP_PROMETHEUS_NAMESPACE=unpoller\n      UP_UNIFI_CONTROLLER_0_PASS=unpoller12345\n      UP_UNIFI_CONTROLLER_0_SAVE_ALARMS="true"\n      UP_UNIFI_CONTROLLER_0_SAVE_ANOMALIES="true"\n      UP_UNIFI_CONTROLLER_0_SAVE_DPI="true"\n      UP_UNIFI_CONTROLLER_0_SAVE_EVENTS="true"\n      UP_UNIFI_CONTROLLER_0_SAVE_IDS="true"\n      UP_UNIFI_CONTROLLER_0_SAVE_SITES="true"\n      UP_UNIFI_CONTROLLER_0_URL=https://192.168.14.250:8443\n      UP_UNIFI_CONTROLLER_0_USER=unpoller\n\nvolumes:\n  grafana-storage:\n  prometheus-data:\n'))),(0,r.kt)("h3",{id:"using-configuration-file"},"Using Configuration File"),(0,r.kt)("p",null,"Alternatively, if you choose to use a configuration file:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy the example ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/unpoller/unpoller/blob/master/examples/up.conf.example"},"config file")),(0,r.kt)("li",{parentName:"ul"},"Edit it as necessary (in particular ensure that the ",(0,r.kt)("inlineCode",{parentName:"li"},"[unifi]"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"user")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"pass")," variables are set)"),(0,r.kt)("li",{parentName:"ul"},"In the ",(0,r.kt)("inlineCode",{parentName:"li"},"[influxdb]")," section change ",(0,r.kt)("inlineCode",{parentName:"li"},'url  = "http://127.0.0.1:8086"')," to become\n",(0,r.kt)("inlineCode",{parentName:"li"},'url  = "http://THE_IP_OF_YOUR_DOCKER_HOST:8086"')),(0,r.kt)("li",{parentName:"ul"},"Save it as ",(0,r.kt)("inlineCode",{parentName:"li"},"unpoller.conf")," in the local location you use for Docker storage in a\nfolder called ",(0,r.kt)("inlineCode",{parentName:"li"},"unpoller"))),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"When configuring make sure that you do ",(0,r.kt)("strong",{parentName:"p"},"not")," include ",(0,r.kt)("inlineCode",{parentName:"p"},":8443")," on the url of the controller\nif you are using ",(0,r.kt)("inlineCode",{parentName:"p"},"unifios"),". Those are: UDM Pro, UDM, UXG, or CloudKey with recent firmware.")),(0,r.kt)("p",null,"Add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," after replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"YOURLOCALPATH"),"\nto a local location for Docker storage."),(0,r.kt)("h4",{id:"influxdb-example"},"InfluxDB Example"),(0,r.kt)("p",null,"Create this environment file ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.env")," and reference this with ",(0,r.kt)("inlineCode",{parentName:"p"},"-e /your/path/docker-compose.env"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"#influxdb\nINFLUXDB_HTTP_AUTH_ENABLED=true\nINFLUXDB_ADMIN_USER=unpoller\nINFLUXDB_ADMIN_PASSWORD=CHANGEME\nINFLUXDB_DB=unpoller\nINFLUXDB_ORG=unpoller\nINFLUXDB_BUCKET=unpoller\nINFLUXDB_ADMIN_TOKEN=unpollersecret\n\n#grafana\nGRAFANA_USERNAME=admin\nGRAFANA_PASSWORD=grafanaadmin\n\n#unifi-poller\nPOLLER_TAG=latest\nPOLLER_DEBUG=false\nPOLLER_SAVE_DPI=false\nUNIFI_USER=unpoller\nUNIFI_PASS=set_this_on_your_controller\nUNIFI_URL=https://127.0.0.1:8443\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# This is for unifi-poller v2.\nversion: '3'\nservices:\n  influxdb:\n    restart: always\n    image: influxdb:1.8\n    ports:\n      - '8086:8086'\n    volumes:\n      - influxdb-storage:/var/lib/influxdb\n    environment:\n      - INFLUXDB_DB=${INFLUXDB_DB}\n      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED}\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}\n      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}\n      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}\n      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}\n      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}\n  chronograf:\n    image: chronograf:latest\n    restart: always\n    ports:\n      - '8888:8888'\n    volumes:\n      - chronograf-storage:/var/lib/chronograf\n    depends_on:\n      - influxdb\n    environment:\n      - INFLUXDB_URL=http://influxdb:8086\n      - INFLUXDB_USERNAME=${INFLUXDB_ADMIN_USER}\n      - INFLUXDB_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}\n  grafana:\n    image: grafana/grafana:latest\n    restart: always\n    ports:\n      - '3000:3000'\n    volumes:\n      - grafana-storage:/var/lib/grafana\n    depends_on:\n      - influxdb\n    environment:\n      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}\n      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel\n  unpoller:\n    restart: always\n    image: ghcr.io/unpoller/unpoller:${POLLER_TAG}\n    depends_on:\n      - grafana\n      - influxdb\n      - chronograf\n    environment:\n      - UP_INFLUXDB_DB=${INFLUXDB_DB}\n      - UP_INFLUXDB_USER=${INFLUXDB_ADMIN_USER}\n      - UP_INFLUXDB_PASS=${INFLUXDB_ADMIN_PASSWORD}\n      - UP_INFLUXDB_ORG=${INFLUXDB_ORG}\n      - UP_INFLUXDB_BUCKET=${INFLUXDB_BUCKET}\n      - UP_INFLUXDB_AUTH_TOKEN=${INFLUXDB_ADMIN_TOKEN}\n      - UP_INFLUXDB_URL=http://influxdb:8086\n      - UP_UNIFI_DEFAULT_USER=${UNIFI_USER}\n      - UP_UNIFI_DEFAULT_PASS=${UNIFI_PASS}\n      - UP_UNIFI_DEFAULT_URL=${UNIFI_URL}\n      - UP_POLLER_DEBUG=${POLLER_DEBUG}\n      - UP_UNIFI_DEFAULT_SAVE_DPI=${POLLER_SAVE_DPI}\n    volumes:\n      - YOURPATH/up.conf:/etc/unpoller/up.conf\nvolumes:\n  influxdb-storage:\n  chronograf-storage:\n  grafana-storage:\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Details of tags available are described in ",(0,r.kt)("a",{parentName:"p",href:"../help/docker_faq"},"Docker - FAQ"),".")),(0,r.kt)("h2",{id:"starting"},"Starting"),(0,r.kt)("p",null,"Whichever configuration method you chose, this is how you start the contianers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -e docker-compose.env\n")),(0,r.kt)("p",null,"If everything is working, after a few minutes you should see like likes this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-none"},"[INFO] UniFi Metrics Recorded. Sites: 1, Clients: 67, UAP: 6, USG/UDM: 1, USW: 5, IDS Events: 0, Points: 1837, Fields: 11307, Errs: 0, Elapsed: 599ms\n")),(0,r.kt)("p",null,"If you don't see these lines then look for errors and double-check your work."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can see the logs for a container with ",(0,r.kt)("inlineCode",{parentName:"p"},"docker logs container-id"),".\nGet the container id with ",(0,r.kt)("inlineCode",{parentName:"p"},"docker ps"),".")),(0,r.kt)("p",null,"Stop the containers and restart them in daemon mode, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -e docker-compose.env -d\n")),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Creating an InfluxDB database and retention policy is explained on the\n",(0,r.kt)("a",{parentName:"li",href:"../dependencies/influxdb#post-setup"},"InfluxDB")," page."),(0,r.kt)("li",{parentName:"ol"},"Finish ",(0,r.kt)("a",{parentName:"li",href:"../install/grafana"},"Setting-up Grafana"),".")))}m.isMDXComponent=!0}}]);