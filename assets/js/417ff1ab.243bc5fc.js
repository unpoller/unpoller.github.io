"use strict";(self.webpackChunkpollerdox=self.webpackChunkpollerdox||[]).push([[639],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),h=a,y=p["".concat(i,".").concat(h)]||p[h]||m[h]||l;return t?r.createElement(y,o(o({ref:n},c),{},{components:t})):r.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=h;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<l;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},6072:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=t(8168),a=(t(6540),t(5680));const l={id:"kubernetes",title:"Kubernetes"},o=void 0,s={unversionedId:"install/kubernetes",id:"install/kubernetes",title:"Kubernetes",description:"This page assumes that you have decided to install UniFi Poller on to an kubernetes cluster.",source:"@site/docs/install/kubernetes.md",sourceDirName:"install",slug:"/install/kubernetes",permalink:"/docs/install/kubernetes",draft:!1,tags:[],version:"current",frontMatter:{id:"kubernetes",title:"Kubernetes"},sidebar:"someSidebar",previous:{title:"Docker",permalink:"/docs/install/docker"},next:{title:"FreeBSD",permalink:"/docs/install/freebsd"}},i={},u=[{value:"First",id:"first",level:2},{value:"Installation",id:"installation",level:2},{value:"Maintenance",id:"maintenance",level:2}],c={toc:u},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This page assumes that you have decided to install UniFi Poller on to an kubernetes cluster.\nInstalling a cluster is not in the scope of this guide."),(0,a.yg)("h2",{id:"first"},"First"),(0,a.yg)("p",null,"All the possible configuration can be found on the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/unpoller/helm-chart"},"main page")," hosting the chart\nThis chart uses CRDs from the prometheus operator, which can be installed with their ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/prometheus-community/helm-charts"},"community\nrepository")),(0,a.yg)("hr",null),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("p",null,"The two main ways to install the helm chart is through the CLI or through a gitops tools as flux."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"helm repo add unpoller https://unpoller.github.io/helm-chart\nhelm repo update\n")),(0,a.yg)("p",null,"If you are using flux, you can rely on their CR:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: source.toolkit.fluxcd.io/v1\nkind: HelmRepository\nmetadata:\n  name: unpoller\n  namespace: flux-system\nspec:\n  interval: 10m\n  url: https://unpoller.github.io/helm-chart\n")),(0,a.yg)("p",null,"Once the repository has been configured, you can proceed to install the chart."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"helm install -f myvalues.yaml your-release-name unpoller/unpoller\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: helm.toolkit.fluxcd.io/v2\nkind: HelmRelease\nmetadata:\n  name: unpoller\n  namespace: flux-system\nspec:\n  interval: 5m\n  targetNamespace: unifi\n  chart:\n    spec:\n      chart: unpoller\n      version: 2.11.2-Chart6\n      sourceRef:\n        kind: HelmRepository\n        name: unpoller\n        namespace: flux-system\n      interval: 10m\n  values:\n    allPossibleValues:\n")),(0,a.yg)("h2",{id:"maintenance"},"Maintenance"),(0,a.yg)("p",null,"When a new release of the chart (or unpoller is generated) you can update unpoller\nby running helm"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --reuse-values yourreleasename ./redis\n")),(0,a.yg)("p",null,"In case of flux/argocd, just updating the version of the chart, should be enough."))}m.isMDXComponent=!0}}]);